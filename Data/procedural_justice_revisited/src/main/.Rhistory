ymax=  upper), alpha = 0.4) +
geom_ribbon(aes(ymin=  lower_crit,
ymax =  upper_crit), alpha = 0.35)
ggplot2::ggplot(res,
aes(x=t, y=att, ymin = lower_crit,
ymax = upper_crit)) +
geom_line(aes(x=t, y=att), size = 1.5, colour = "red4") +
geom_hline(yintercept = 0, colour="black", size = 0.5, linetype = "dashed")+
geom_ribbon(aes(ymin= lower,
ymax=  upper), alpha = 0.4) +
geom_ribbon(aes(ymin=  lower_crit,
ymax =  upper_crit), alpha = 0.35)+
#theme_minimal()+
theme(axis.title = element_text(color="black",  size=15))+
theme(axis.text.y = element_text(size = 12, face = "bold", color="black"))+
theme(axis.text.x = element_text(size = 12, face = "bold",color="black"))+
scale_x_continuous("Month relative to training",
breaks = seq(-36, 36, by = 12)) +
scale_y_continuous(ylab, breaks = scales::pretty_breaks())
ggplot2::ggplot(res,
aes(x=t, y=att, ymin = lower_crit,
ymax = upper_crit)) +
geom_line(aes(x=t, y=att), size = 1.5, colour = "red4") +
geom_hline(yintercept = 0, colour="black", size = 0.5, linetype = "dashed")+
geom_ribbon(aes(ymin= lower,
ymax=  upper), alpha = 0.4) +
geom_ribbon(aes(ymin=  lower_crit,
ymax =  upper_crit), alpha = 0.35)+
#theme_minimal()+
#theme(axis.title = element_text(color="black",  size=15))+
#theme(axis.text.y = element_text(size = 12, face = "bold", color="black"))+
#theme(axis.text.x = element_text(size = 12, face = "bold",color="black"))+
scale_x_continuous("Month relative to training",
breaks = seq(-36, 36, by = 12)) +
scale_y_continuous(ylab, breaks = scales::pretty_breaks())
ggplot2::ggplot(res,
aes(x=t, y=att, ymin = lower_crit,
ymax = upper_crit)) +
geom_line(aes(x=t, y=att), size = 1.5, colour = "red4") +
geom_hline(yintercept = 0, colour="black", size = 0.5, linetype = "dashed")+
geom_ribbon(aes(ymin= lower,
ymax=  upper), alpha = 0.4) +
geom_ribbon(aes(ymin=  lower_crit,
ymax =  upper_crit), alpha = 0.35) +
#theme_minimal()+
#theme(axis.title = element_text(color="black",  size=15))+
#theme(axis.text.y = element_text(size = 12, face = "bold", color="black"))+
#theme(axis.text.x = element_text(size = 12, face = "bold",color="black"))+
scale_x_continuous("Month relative to training",
breaks = seq(-36, 36, by = 12))
plot_es_a <- ggplot2::ggplot(res,
aes(x=t, y=att, ymin = lower_crit,
ymax = upper_crit)) +
geom_line(aes(x=t, y=att), size = 1.5, colour = "red4") +
geom_hline(yintercept = 0, colour="black", size = 0.5, linetype = "dashed")+
geom_vline(xintercept = 0, colour="black", size = 0.5, linetype = "dashed")+
geom_ribbon(aes(ymin= lower,
ymax=  upper), alpha = 0.4) +
geom_ribbon(aes(ymin=  lower_crit,
ymax =  upper_crit), alpha = 0.35) +
#theme_minimal()+
#theme(axis.title = element_text(color="black",  size=15))+
#theme(axis.text.y = element_text(size = 12, face = "bold", color="black"))+
#theme(axis.text.x = element_text(size = 12, face = "bold",color="black"))+
scale_x_continuous("Month relative to training",
breaks = seq(-36, 36, by = 12)) +
scale_y_continuous(ylab, breaks = scales::pretty_breaks())
plot_es_a
ggplot2::ggplot(res,
aes(x=t, y=att, ymin = lower_crit,
ymax = upper_crit)) +
geom_line(aes(x=t, y=att), size = 1.5, colour = "red4") +
geom_hline(yintercept = 0, colour="black", size = 0.5, linetype = "dashed")+
geom_vline(xintercept = 0, linetype = "dashed") +
geom_ribbon(aes(ymin= lower,
ymax=  upper), alpha = 0.4) +
geom_ribbon(aes(ymin=  lower_crit,
ymax =  upper_crit), alpha = 0.35) +
#theme_minimal()+
#theme(axis.title = element_text(color="black",  size=15))+
#theme(axis.text.y = element_text(size = 12, face = "bold", color="black"))+
#theme(axis.text.x = element_text(size = 12, face = "bold",color="black"))+
scale_x_continuous("Month relative to training",
breaks = seq(-36, 36, by = 12))
ggplot2::ggplot(res,
aes(x=t, y=att, ymin = lower_crit,
ymax = upper_crit)) +
geom_line(aes(x=t, y=att), size = 1.5, colour = "red4") +
geom_hline(yintercept = 0, colour="black", size = 0.5, linetype = "dashed")+
geom_vline(xintercept = 0, colour="black", size = 0.5, linetype = "dashed")+
geom_ribbon(aes(ymin= lower,
ymax=  upper), alpha = 0.4) +
geom_ribbon(aes(ymin=  lower_crit,
ymax =  upper_crit), alpha = 0.35) +
#theme_minimal()+
#theme(axis.title = element_text(color="black",  size=15))+
#theme(axis.text.y = element_text(size = 12, face = "bold", color="black"))+
#theme(axis.text.x = element_text(size = 12, face = "bold",color="black"))+
scale_x_continuous("Month relative to training",
breaks = seq(-36, 36, by = 12))
ggplot2::ggplot(res,
aes(x=t, y=att, ymin = lower_crit,
ymax = upper_crit)) +
geom_line(aes(x=t, y=att), size = 1.5, colour = "red4") +
geom_hline(yintercept = 0, colour="black", size = 0.5, linetype = "dashed")+
geom_vline(xintercept = -1, colour="black", size = 0.5, linetype = "dashed")+
geom_ribbon(aes(ymin= lower,
ymax=  upper), alpha = 0.4) +
geom_ribbon(aes(ymin=  lower_crit,
ymax =  upper_crit), alpha = 0.35) +
theme_minimal()+
theme(axis.title = element_text(color="black",  size=15))+
theme(axis.text.y = element_text(size = 12, face = "bold", color="black"))+
theme(axis.text.x = element_text(size = 12, face = "bold",color="black"))+
scale_x_continuous("Month relative to training",
breaks = seq(-36, 36, by = 12))
source('~/Documents/GitHub/procedural_justice_revisited/src/aux/functions.R')
source('~/Documents/GitHub/procedural_justice_revisited/src/aux/functions.R')
source('~/Documents/GitHub/procedural_justice_revisited/src/main/8_calendar_effects.R')
plot_calendar_new(calendar_effects$calendar[[1]],
ylab = "Calendar ATT on complaints")
patchwork::wrap_plots(
plot_calendar_new(calendar_effects$calendar[[1]],
ylab = "Calendar ATT on complaints"),
plot_calendar_new(calendar_effects$calendar[[1]],
ylab = "Calendar ATT on complaints",
time = c(19, 60)),
ncol = 1, heights = c(0.3, 0.7)
)
plot_calendar(calendar_effects$calendar[[1]],
ylab = "Calendar ATT on complaints")
plot_calendar_new(calendar_effects$calendar[[1]],
ylab = "Calendar ATT on complaints")
source('~/Documents/GitHub/procedural_justice_revisited/src/aux/functions.R')
plot_calendar_new(calendar_effects$calendar[[1]],
ylab = "Calendar ATT on complaints")
source('~/Documents/GitHub/procedural_justice_revisited/src/aux/functions.R')
plot_calendar_new(calendar_effects$calendar[[1]],
ylab = "Calendar ATT on complaints")
source('~/Documents/GitHub/procedural_justice_revisited/src/aux/functions.R')
source(here::here("src/main/7_dynamic_effects.R"))
source(here::here("src/main/8_calendar_effects.R"))
source(here::here("src/main/9_other_figures.R"))
source(here::here("src/main/10_selective_effects.R"))
source(here::here("src/main/7_dynamic_effects.R"))
source(here::here("src/main/8_calendar_effects.R"))
source(here::here("src/main/9_other_figures.R"))
source(here::here("src/main/10_selective_effects.R"))
source('~/Documents/GitHub/procedural_justice_revisited/src/aux/functions.R')
# plot calendar effects
patchwork::wrap_plots(
plot_calendar_new(calendar_effects$calendar[[1]],
ylab = "Calendar ATT on complaints"),
plot_calendar_new(calendar_effects$calendar[[1]],
ylab = "Calendar ATT on complaints",
time = c(19, 60)),
ncol = 1, heights = c(0.3, 0.7)
) +
ggsave(filename = here("products/figures/calendar_complaints_updated.pdf"),
width = 8, height = 7)
patchwork::wrap_plots(
plot_calendar_new(calendar_effects$calendar[[2]],
ylab = "Calendar ATT on force"),
plot_calendar_new(calendar_effects$calendar[[2]],
ylab = "Calendar ATT on force",
time = c(19, 60)),
ncol = 1, heights = c(0.3, 0.7)
) +
ggsave(filename = here("products/figures/calendar_force_updated.pdf"),
width = 8, height = 7)
# calculate mean outcomes in 12 months before training
pj_officer_level_balanced %>%
mutate(relative = period - first_trained) %>%
filter(between(relative, -12, -1)) %>%
summarize_at(vars(complaints, sustained, force), mean)
# plot dynamic effects using updated data
plot_es_new_unique(balanced_effects$dynamic[[1]], time = c(-36, 36),
outcome = "complaints",
ylab = "Dynamic ATT, complaints per officer") +
annotate("text", x = 24, y = 0.04,
label = expression(bar(y)["[-12,-1]"]*"= 0.044"), parse = TRUE) +
ggsave(filename = here("products/figures/dynamic_complaints_updated.pdf"),
width = 8, height = 4)
plot_es_new_unique(balanced_effects$dynamic[[2]], time = c(-36, 36),
outcome = "sustained",
ylab = "Dynamic ATT, sustained complaints per officer") +
annotate("text", x = 24, y = 0.013,
label = expression(bar(y)["[-12,-1]"]*"= 0.004"), parse = TRUE) +
ggsave(filename = here("products/figures/dynamic_sustained_updated.pdf"),
width = 8, height = 4)
plot_es_new_unique(balanced_effects$dynamic[[3]], time = c(-36, 36),
outcome = "force",
ylab = "Dynamic ATT, use of force per officer") +
annotate("text", x = 24, y = 0.03,
label = expression(bar(y)["[-12,-1]"]*"= 0.047"), parse = TRUE) +
ggsave(filename = here("products/figures/dynamic_force_updated.pdf"),
width = 8, height = 4)
# plot dynamic effects using original data
plot_es_new_unique(truncated_effects$dynamic[[1]], time = c(-36, 36),
outcome = "complaints",
ylab = "Dynamic ATT, complaints per officer") +
ggsave(filename = here("products/figures/dynamic_complaints_original.pdf"),
width = 8, height = 4)
plot_es_new_unique(truncated_effects$dynamic[[2]], time = c(-36, 36),
outcome = "sustained",
ylab = "Dynamic ATT, sustained complaints per officer") +
ggsave(filename = here("products/figures/dynamic_sustained_original.pdf"),
width = 8, height = 4)
plot_es_new_unique(truncated_effects$dynamic[[3]], time = c(-36, 36),
outcome = "force",
ylab = "Dynamic ATT, use of force per officer") +
ggsave(filename = here("products/figures/dynamic_force_original.pdf"),
width = 8, height = 4)
source('~/Documents/GitHub/procedural_justice_revisited/src/main/7_dynamic_effects.R')
source('~/Documents/GitHub/procedural_justice_revisited/src/main/8_calendar_effects.R')
source('~/Documents/GitHub/procedural_justice_revisited/src/main/10_selective_effects.R')
balanced_effects$selective[[1]]$overall.att
balanced_effects$simple[[1]]$overall.att
sum(is.na(pj_officer_level$uid))
sum(is.na(pj_officer_level$complaints))
source(here::here("src/aux/packages.R"))
source(here("src/aux/functions.R"))
load(here("products/rdata/3_officer_level_data.RData"))
# model for balanced panel
balanced_model <-
function(yname = "complaints", data = pj_officer_level) {
if (yname == "sustained") {
data <- filter(data, month <= settlement_terminus)
}
att_gt(
yname            = yname,
tname            = "period",
idname           = "uid",
first.treat.name = "first_trained",
data             = data,
bstrap           = FALSE,
panel            = TRUE,
control.group    = "notyettreated"
)
}
# estimate models (run time: approx 80 minutes on 16GB memory)
did_balanced_complaints <- balanced_model(yname = "complaints")
##########################################################################
# File: 4_did_balanced.R
# Description: Estimate DID model using Callaway and Sant'Anna (2020)
#              procedure
#              Use balanced panel (excluding officers who retired during study)
##########################################################################
source(here::here("src/aux/packages.R"))
source(here("src/aux/functions.R"))
load(here("products/rdata/3_officer_level_data.RData"))
# model for balanced panel
balanced_model <-
#function(yname = "complaints", data = pj_officer_level_balanced) {
function(yname = "complaints", data = pj_officer_level) {
if (yname == "sustained") {
data <- filter(data, month <= settlement_terminus)
}
att_gt(
yname            = yname,
tname            = "period",
idname           = "uid",
first.treat.name = "first_trained",
data             = data,
bstrap           = FALSE,
panel            = FALSE,
control.group    = "notyettreated"
)
}
# estimate models (run time: approx 80 minutes on 16GB memory)
did_balanced_complaints <- balanced_model(yname = "complaints")
source('~/Documents/GitHub/procedural_justice_revisited/src/main/main.R')
source('~/Documents/GitHub/procedural_justice_revisited/src/main/main.R')
warnings()
source('~/Documents/GitHub/procedural_justice_revisited/src/main/main.R')
source('~/Documents/GitHub/procedural_justice_revisited/src/main/main.R')
warnings()
source('~/Documents/GitHub/procedural_justice_revisited/src/main/7_dynamic_effects.R')
# aggregate to calendar effects
# not calculated for sustained & settled complaints (returns error)
calendar_effects <-
filter(balanced_effects, outcome != "sustained") %>%
mutate(calendar = map(fit, function(x) aggte(x, type = "calendar",  bstrap = TRUE)))
calendar_effects$calendar[[1]]
calendar_effects$calendar[[1]]$overall.att
bind_rows(calendar_effects$calendar) %>%
mutate(
outcome = rep(c("Complaints", "Use of Force"), 1),
lower   = overall.att - qnorm(0.975) * overall.se,
upper   = overall.att + qnorm(0.975) * overall.se
)
source('~/Documents/GitHub/procedural_justice_revisited/src/main/8_calendar_effects.R')
##########################################################################
# File: 8_calendar_effects.R
# Description: Plot calendar effects
##########################################################################
load(here("products/rdata/4_did_balanced.RData"))
load(here("products/rdata/5_did_truncated.RData"))
# aggregate to calendar effects
# not calculated for sustained & settled complaints (returns error)
calendar_effects <-
filter(balanced_effects, outcome != "sustained") %>%
mutate(calendar = map(fit, function(x) aggte(x, type = "calendar",  bstrap = TRUE)),
cal_att     = map_dbl(calendar, ~ .$overall.att),
cal_se      = map_dbl(calendar, ~ .$overall.se))
# bind and plot
bind_rows(calendar_effects) %>%
mutate(
outcome = c("Complaints", "Use of Force"),
lower   = cal_att - qnorm(0.975) * cal_se,
upper   = cal_att + qnorm(0.975) * cal_se
) %>%
ggplot(aes(outcome, cal_att, ymin = lower, ymax = upper,
color = data, shape = data)) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_errorbar(width = 0, position = position_dodge(width = 0.2)) +
geom_point(position = position_dodge(width = 0.2)) +
scale_x_discrete(NULL) +
scale_y_continuous("Average of Calendar ATTs") +
scale_color_brewer("Data", palette = "Dark2") +
scale_shape_discrete("Data") +
ggsave(here("products/figures/cal_att.pdf"),
width = 8, height = 5, device = cairo_pdf)
bind_rows(calendar_effects) %>%
mutate(
outcome = c("Complaints", "Use of Force"),
lower   = cal_att - qnorm(0.975) * cal_se,
upper   = cal_att + qnorm(0.975) * cal_se
)
bind_rows(calendar_effects) %>%
mutate(
outcome = c("Complaints", "Use of Force"),
lower   = cal_att - qnorm(0.975) * cal_se,
upper   = cal_att + qnorm(0.975) * cal_se
) %>%
ggplot(aes(outcome, cal_att, ymin = lower, ymax = upper,
color = data, shape = data))
bind_rows(calendar_effects) %>%
mutate(
outcome = c("Complaints", "Use of Force"),
lower   = cal_att - qnorm(0.975) * cal_se,
upper   = cal_att + qnorm(0.975) * cal_se
) %>%
ggplot(aes(outcome, cal_att, ymin = lower, ymax = upper,
color = data, shape = data)) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_errorbar(width = 0, position = position_dodge(width = 0.2)) +
geom_point(position = position_dodge(width = 0.2)) +
scale_x_discrete(NULL) +
scale_y_continuous("Average of Calendar ATTs") +
scale_color_brewer("Data", palette = "Dark2") +
scale_shape_discrete("Data")
bind_rows(calendar_effects) %>%
mutate(
outcome = c("Complaints", "Use of Force"),
lower   = cal_att - qnorm(0.975) * cal_se,
upper   = cal_att + qnorm(0.975) * cal_se
) %>%
ggplot(aes(outcome, cal_att, ymin = lower, ymax = upper)) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_errorbar(width = 0, position = position_dodge(width = 0.2)) +
geom_point(position = position_dodge(width = 0.2)) +
scale_x_discrete(NULL) +
scale_y_continuous("Average of Calendar ATTs")
5/2
5/4
# bind and plot
bind_rows(calendar_effects) %>%
mutate(
outcome = c("Complaints", "Use of Force"),
lower   = cal_att - qnorm(0.9875) * cal_se,
upper   = cal_att + qnorm(0.9875) * cal_se
) %>%
ggplot(aes(outcome, cal_att, ymin = lower, ymax = upper)) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_errorbar(width = 0, position = position_dodge(width = 0.2)) +
geom_point(position = position_dodge(width = 0.2)) +
scale_x_discrete(NULL) +
scale_y_continuous("Average of Calendar ATTs")
qnorm(0.9875)
qnorm(0.975)
5/(2*3)
1 - 5/(2*3)
1 - 0.5/(2*3)
1 - 0.05/(2*3)
bind_rows(balanced_effects, truncated_effects) %>%
mutate(
outcome = rep(c("Complaints", "Sustained & Settled", "Use of Force"), 2),
data    = fct_relevel(rep(c("Updated", "Original"), each = 3),
"Updated", "Original"),
lower   = overall_att - qnorm(0.9916667) * overall_se,
upper   = overall_att + qnorm(0.9916667) * overall_se
) %>%
ggplot(aes(outcome, overall_att, ymin = lower, ymax = upper,
color = data, shape = data)) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_errorbar(width = 0, position = position_dodge(width = 0.2)) +
geom_point(position = position_dodge(width = 0.2)) +
scale_x_discrete(NULL) +
scale_y_continuous("Simple weighted-average ATT") +
scale_color_brewer("Data", palette = "Dark2") +
scale_shape_discrete("Data")
bind_rows(balanced_effects, truncated_effects) %>%
mutate(
outcome = rep(c("Complaints", "Sustained & Settled", "Use of Force"), 2),
data    = fct_relevel(rep(c("Updated", "Original"), each = 3),
"Updated", "Original"),
lower   = overall_att - qnorm(0.9875) * overall_se,
upper   = overall_att + qnorm(0.9875) * overall_se
) %>%
ggplot(aes(outcome, overall_att, ymin = lower, ymax = upper,
color = data, shape = data)) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_errorbar(width = 0, position = position_dodge(width = 0.2)) +
geom_point(position = position_dodge(width = 0.2)) +
scale_x_discrete(NULL) +
scale_y_continuous("Simple weighted-average ATT") +
scale_color_brewer("Data", palette = "Dark2") +
scale_shape_discrete("Data")
1 - 0.05/(2*4)
1 - 0.05/(2*2)
1 - 0.05/(2*1)
# aggregate to calendar effects
# not calculated for sustained & settled complaints (returns error)
calendar_effects <-
#filter(balanced_effects, outcome != "sustained") %>%
mutate(calendar = map(fit, function(x) aggte(x, type = "calendar",  bstrap = TRUE)),
cal_att     = map_dbl(calendar, ~ .$overall.att),
cal_se      = map_dbl(calendar, ~ .$overall.se))
##########################################################################
# File: 8_calendar_effects.R
# Description: Plot calendar effects
##########################################################################
load(here("products/rdata/4_did_balanced.RData"))
load(here("products/rdata/5_did_truncated.RData"))
calendar_effects <-
#filter(balanced_effects, outcome != "sustained") %>%
mutate(calendar = map(fit, function(x) aggte(x, type = "calendar",  bstrap = TRUE)),
cal_att     = map_dbl(calendar, ~ .$overall.att),
cal_se      = map_dbl(calendar, ~ .$overall.se))
# aggregate to calendar effects
# not calculated for sustained & settled complaints (returns error)
calendar_effects <-
filter(balanced_effects, outcome != "ssustained") %>%
mutate(calendar = map(fit, function(x) aggte(x, type = "calendar",  bstrap = TRUE)),
cal_att     = map_dbl(calendar, ~ .$overall.att),
cal_se      = map_dbl(calendar, ~ .$overall.se))
# plot calendar effects
patchwork::wrap_plots(
plot_calendar_new(calendar_effects$calendar[[1]],
ylab = "Calendar ATT on complaints"),
plot_calendar_new(calendar_effects$calendar[[1]],
ylab = "Calendar ATT on complaints",
time = c(19, 60)),
ncol = 1, heights = c(0.3, 0.7)
) +
ggsave(filename = here("products/figures/calendar_complaints_updated.pdf"),
width = 8, height = 7)
patchwork::wrap_plots(
plot_calendar_new(calendar_effects$calendar[[2]],
ylab = "Calendar ATT on sustained complaints"),
plot_calendar_new(calendar_effects$calendar[[2]],
ylab = "Calendar ATT on sustained complaints",
time = c(19, 60)),
ncol = 1, heights = c(0.3, 0.7)
) +
ggsave(filename = here("products/figures/calendar_sustained_updated.pdf"),
width = 8, height = 7)
patchwork::wrap_plots(
plot_calendar_new(calendar_effects$calendar[[3]],
ylab = "Calendar ATT on force"),
plot_calendar_new(calendar_effects$calendar[[3]],
ylab = "Calendar ATT on force",
time = c(19, 60)),
ncol = 1, heights = c(0.3, 0.7)
) +
ggsave(filename = here("products/figures/calendar_force_updated.pdf"),
width = 8, height = 7)
# bind and plot
bind_rows(calendar_effects) %>%
mutate(
outcome = c("Complaints", "Sustained & Settled", "Use of Force"),
lower   = cal_att - qnorm(0.975) * cal_se,
upper   = cal_att + qnorm(0.975) * cal_se
) %>%
ggplot(aes(outcome, cal_att, ymin = lower, ymax = upper)) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_errorbar(width = 0, position = position_dodge(width = 0.2)) +
geom_point(position = position_dodge(width = 0.2)) +
scale_x_discrete(NULL) +
scale_y_continuous("Average of Calendar ATTs") +
ggsave(here("products/figures/cal_att.pdf"),
width = 8, height = 5, device = cairo_pdf)
1 - 0.05/(2*3)
bind_rows(calendar_effects) %>%
mutate(
outcome = c("Complaints", "Sustained & Settled", "Use of Force"),
lower   = cal_att - qnorm(0.9916667) * cal_se,
upper   = cal_att + qnorm(0.9916667) * cal_se
) %>%
ggplot(aes(outcome, cal_att, ymin = lower, ymax = upper)) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_errorbar(width = 0, position = position_dodge(width = 0.2)) +
geom_point(position = position_dodge(width = 0.2)) +
scale_x_discrete(NULL) +
scale_y_continuous("Average of Calendar ATTs")
source('~/Documents/GitHub/procedural_justice_revisited/src/main/8_calendar_effects.R')
source('~/Dropbox/Co-authored Projects/DiDInefficiency/Data/procedural_justice_revisited/src/main/0_main.R')
warnings()
source('~/Dropbox/Co-authored Projects/DiDInefficiency/Data/procedural_justice_revisited/src/main/0_main.R')
devtools::install_github("bcallaway11/did")
source('~/Dropbox/Co-authored Projects/DiDInefficiency/Data/procedural_justice_revisited/src/main/0_main.R')
